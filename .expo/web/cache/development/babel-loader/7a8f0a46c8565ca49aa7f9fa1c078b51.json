{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GGCUser\\\\Documents\\\\GitHub\\\\HenTats\\\\App.js\";\nimport * as React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport styles from \"./components/globalstyles\";\n\nfunction HomeScreen() {\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.logoCanvas,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    resizeMode: \"cover\",\n    style: styles.logoPic,\n    source: require(\"./components/Images/logo.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.inputView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputText,\n    placeholder: \"Email...\",\n    placeholderTextColor: \"#003f5c\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.errMsgBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.errMsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.inputView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    secureTextEntry: true,\n    style: styles.inputText,\n    placeholder: \"Password...\",\n    placeholderTextColor: \"#003f5c\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.errMsgBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.errMsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.loginView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.loginBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"LOGIN\"))), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Don't have an account?\")), React.createElement(View, {\n    style: styles.switchToLoginOrRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.signUpText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Sign Up\"))), React.createElement(View, {\n    style: styles.forgotBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.forgot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Forgot Password?\"))));\n}\n\nfunction CameraScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Camera!\"));\n}\n\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  var _this = this;\n\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === \"Home\") {\n            iconName = focused ? \"home\" : \"home-outline\";\n          } else if (route.name === \"Camera\") {\n            iconName = focused ? \"camera\" : \"camera-outline\";\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 20\n            }\n          });\n        },\n        tabBarActiveTintColor: \"tomato\",\n        tabBarInactiveTintColor: \"gray\"\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Camera\",\n    component: CameraScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/GGCUser/Documents/GitHub/HenTats/App.js"],"names":["React","Ionicons","createBottomTabNavigator","NavigationContainer","styles","HomeScreen","container","logoCanvas","logoPic","require","inputView","inputText","errMsgBody","errMsg","loginView","loginBtn","loginText","switchToLoginOrRegister","signUpText","forgotBody","forgot","CameraScreen","flex","justifyContent","alignItems","Tab","App","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { Text, View, TextInput, TouchableOpacity, Image } from \"react-native\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport styles from \"./components/globalstyles\";\r\n\r\nfunction HomeScreen() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style = {styles.logoCanvas}>\r\n        <Image resizeMode='cover' style ={styles.logoPic} source={require('./components/Images/logo.png')} />\r\n      </View>\r\n      {/*<Text style={styles.logo}>HenTat</Text>*/}\r\n      <View style={styles.inputView}>\r\n        <TextInput\r\n          style={styles.inputText}\r\n          placeholder=\"Email...\"\r\n          placeholderTextColor=\"#003f5c\"\r\n          //onChangeText={setEmail}\r\n        />\r\n      </View>\r\n      <View style={styles.errMsgBody}>\r\n        <Text style={styles.errMsg}>{/*emailError*/}</Text>\r\n      </View>\r\n      <View style={styles.inputView}>\r\n        <TextInput\r\n          secureTextEntry\r\n          style={styles.inputText}\r\n          placeholder=\"Password...\"\r\n          placeholderTextColor=\"#003f5c\"\r\n          //onChangeText={setPassword}\r\n        />\r\n      </View>\r\n      <View style={styles.errMsgBody}>\r\n        <Text style={styles.errMsg}>{/*passwordError*/}</Text>\r\n      </View>\r\n      <View style={styles.loginView}>\r\n        <TouchableOpacity style={styles.loginBtn} /*onPress={handleLogin}*/>\r\n          <Text style={styles.loginText}>LOGIN</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View>\r\n        <Text>Don't have an account?</Text>\r\n      </View>\r\n      <View style={styles.switchToLoginOrRegister}>\r\n        <TouchableOpacity>\r\n          <Text style={styles.signUpText} /*onPress={hasAccountHandler}*/>\r\n            Sign Up\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={styles.forgotBody}>\r\n        <TouchableOpacity>\r\n          <Text style={styles.forgot} /*onPress={forgotPasswordHandler} */>\r\n            Forgot Password?\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction CameraScreen() {\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n      <Text>Camera!</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default function App() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Tab.Navigator\r\n        screenOptions={({ route }) => ({\r\n          tabBarIcon: ({ focused, color, size }) => {\r\n            let iconName;\r\n\r\n            if (route.name === \"Home\") {\r\n              iconName = focused ? \"home\" : \"home-outline\";\r\n            } else if (route.name === \"Camera\") {\r\n              iconName = focused ? \"camera\" : \"camera-outline\";\r\n            }\r\n\r\n            // You can return any component that you like here!\r\n            return <Ionicons name={iconName} size={size} color={color} />;\r\n          },\r\n          tabBarActiveTintColor: \"tomato\",\r\n          tabBarInactiveTintColor: \"gray\",\r\n        })}\r\n      >\r\n        <Tab.Screen name=\"Home\" component={HomeScreen} />\r\n        <Tab.Screen name=\"Camera\" component={CameraScreen} />\r\n      </Tab.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}