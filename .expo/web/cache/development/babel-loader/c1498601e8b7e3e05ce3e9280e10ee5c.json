{"ast":null,"code":"var _jsxFileName = \"/Users/mrahman/Documents/ProjectHenTats/HenTats/components/Screens/SignIn.js\";\nimport * as React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport styles from \"../globalstyles\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\n\nvar handleLogin = function handleLogin() {\n  fire.auth().signInWithEmailAndPassword(email, password).catch(function (err) {\n    switch (err.code) {\n      case \"auth/invalid-email\":\n      case \"auth/user-disabled\":\n      case \"auth/user-not-found\":\n        break;\n\n      case \"auth/wrong-password\":\n        break;\n    }\n  });\n};\n\nexport default function SignIn(props) {\n  var hasAccountHandler = props.hasAccountHandler,\n      signUp = props.signUp,\n      setSignUp = props.setSignUp;\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.inner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, React.createElement(ImageBackground, {\n    source: require(\"../Images/henna.jpg\"),\n    resizeMode: \"cover\",\n    style: styles.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.welcome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, \"Welcome to HenTat!\")), React.createElement(View, {\n    style: styles.logoContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: styles.logoPic,\n    source: require(\"../Images/logo.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: styles.signIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.inputView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputText,\n    placeholder: \"Email\",\n    placeholderTextColor: \"#00f3c5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.inputView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    secureTextEntry: true,\n    style: styles.inputText,\n    placeholder: \"Password\",\n    placeholderTextColor: \"#00f3c5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }))), React.createElement(View, {\n    style: styles.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.loginBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"Login\")), React.createElement(TouchableOpacity, {\n    onPress: hasAccountHandler,\n    style: styles.loginBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, \"Sign Up Here\")), React.createElement(TouchableOpacity, {\n    style: styles.loginBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \"Forgot Password?\")))))));\n}","map":{"version":3,"sources":["/Users/mrahman/Documents/ProjectHenTats/HenTats/components/Screens/SignIn.js"],"names":["React","Ionicons","styles","getAuth","signInWithEmailAndPassword","handleLogin","fire","auth","email","password","catch","err","code","SignIn","props","hasAccountHandler","signUp","setSignUp","Platform","OS","container","Keyboard","dismiss","inner","require","image","title","welcome","logoContainer","logoPic","signIn","inputView","inputText","buttons","loginBtn","loginText"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  Text,\n  View,\n  TextInput,\n  TouchableOpacity,\n  Image,\n  KeyboardAvoidingView,\n  TouchableWithoutFeedback,\n  Keyboard,\n  ImageBackground,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport styles from \"../globalstyles\";\n\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\n\n  const handleLogin = () => {\n    //clearErrors();\n    fire\n        .auth()\n        .signInWithEmailAndPassword(email, password)\n        .catch((err) => {\n            switch(err.code){\n                case \"auth/invalid-email\":\n                case \"auth/user-disabled\":\n                case \"auth/user-not-found\":\n                   // setEmailError(err.message);\n                    break;\n                case \"auth/wrong-password\":\n                    //setPasswordError(err.message);\n                    break;\n            }\n        });\n};\n\nexport default function SignIn(props) {\n  const {hasAccountHandler, signUp, setSignUp} = props;\n  return (\n    <KeyboardAvoidingView\n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n      style={styles.container}\n    >\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n          <View style={styles.inner}>\n          <ImageBackground source={require('../Images/henna.jpg')} resizeMode=\"cover\" style={styles.image}>\n            <View style={styles.title}>\n              <Text style={styles.welcome}>Welcome to HenTat!</Text>\n            </View>\n            <View style={styles.logoContainer}>\n              <Image\n                style={styles.logoPic}\n                source={require(\"../Images/logo.png\")}\n              />\n            </View>\n            <View style={styles.signIn}>\n              <View style={styles.inputView}>\n                <TextInput\n                  style={styles.inputText}\n                  placeholder=\"Email\"\n                  placeholderTextColor=\"#00f3c5\"\n                  //onChangeText={setEmail}\n                />\n              </View>\n              <View style={styles.inputView}>\n                <TextInput\n                  secureTextEntry\n                  style={styles.inputText}\n                  placeholder=\"Password\"\n                  placeholderTextColor=\"#00f3c5\"\n                  //onChangeText={setPassword}\n                />\n              </View>\n            </View>\n            <View style={styles.buttons}>\n              <TouchableOpacity\n                style={styles.loginBtn} /*onPress={handleLogin}*/>\n                <Text style={styles.loginText}>Login</Text>\n              </TouchableOpacity>\n\n              <TouchableOpacity  onPress={hasAccountHandler} style={styles.loginBtn}>\n                <Text style={styles.loginText} >\n                  Sign Up Here\n                </Text>\n              </TouchableOpacity>\n\n              <TouchableOpacity style={styles.loginBtn}>\n                <Text\n                  style={styles.loginText} /*onPress={forgotPasswordHandler} */\n                >\n                  Forgot Password?\n                </Text>\n              </TouchableOpacity>\n            </View>\n            </ImageBackground>\n          </View>\n        </TouchableWithoutFeedback>\n      \n    </KeyboardAvoidingView>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}